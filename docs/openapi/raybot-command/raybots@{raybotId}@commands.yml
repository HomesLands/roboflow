get:
  summary: List raybot commands
  operationId: listRaybotCommands
  description: List raybot commands
  tags:
    - raybotCommand
  parameters:
    - $ref: "../components/raybot.yml#/parameters/RaybotId"
    - $ref: "../components/paging.yml#/parameters/Page"
    - $ref: "../components/paging.yml#/parameters/PageSize"
    - name: sort
      in: query
      description: >
        Sort the results by one or more columns.
          - Use a column name for ascending order (e.g., created_at).
          - Prefix with `-` for descending order (e.g., -created_at).
          - Separate multiple columns with a comma (e.g., created_at,-updated_at).

        Allowed columns: `status`, `started_at`, `completed_at`.
      required: false
      schema:
        type: string
        example: "created_at"
  responses:
    '200':
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            $ref: "../components/raybot-command.yml#/schemas/PagingRaybotCommandResponse"

post:
  summary: Create raybot command
  operationId: createRaybotCommand
  description: >
    Create a command based on the specified `RaybotCommandType`. Each raybot command type defines the structure of its input.

    ### Raybot Command Types and Inputs:
      - **STOP**: No input required.
      - **MOVE_FORWARD**: No input required.
      - **MOVE_BACKWARD**: No input required.
      - **OPEN_BOX**: No input required.
      - **CLOSE_BOX**: No input required.
      - **WAIT_GET_ITEM**: No input required.
      - **DROP_BOX**: The following input is **optional**:
        ```json
        {
          "distance": 1300
        }
        ```
      - **LIFT_BOX**: The following input is **optional**:
        ```json
        {
          "distance": 1300
        }
        ```
      - **MOVE_TO_LOCATION**: The following input is **required**:
        ```json
        {
          "location": "string",
          "direction": "FORWARD or BACKWARD"
        }
        ```
      - **CHECK_QR**: The following input is **required**:
        ```json
        {
          "qrCode": "string"
        }
        ```

    The `input` field must match the required structure for the selected `RaybotCommandType`. An invalid or missing input will result in an error.
  tags:
    - raybotCommand
  parameters:
    - $ref: "../components/raybot.yml#/parameters/RaybotId"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../components/raybot-command.yml#/schemas/CreateRaybotCommandRequest"
  responses:
    '201':
      description: Expected response to a valid request
      content:
        application/json:
          schema:
            $ref: "../components/raybot-command.yml#/schemas/RaybotCommandResponse"
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "../components/error.yml#/schemas/Error"
          example:
            code: "bad_request"
            message: "Bad request"
